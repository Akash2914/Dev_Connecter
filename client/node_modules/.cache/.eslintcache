[{"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\index.js":"1","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\App.js":"3","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\store.js":"4","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\utils\\setAuthToken.js":"5","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\actions\\Auth_action.js":"6","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\routing\\PrivateRoute.js":"8","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\dashboard\\Dashboard.js":"9","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\auth\\Register.js":"10","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\layout\\Landing.js":"11","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\layout\\Alert.js":"12","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile-forms\\CreateProfile.js":"13","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile-forms\\AddExperience.js":"14","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\layout\\Navbar.js":"15","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile-forms\\AddEducation.js":"16","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile-forms\\EditProfile.js":"17","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\posts\\Posts.js":"18","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profiles\\Profiles.js":"19","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile\\Profile.js":"20","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\posts\\Post.js":"21","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\actions\\Alert_action.js":"22","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\actions\\Types.js":"23","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\actions\\Profile_action.js":"24","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\dashboard\\DashboardActions.js":"25","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\layout\\Spinner.js":"26","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\dashboard\\Experience.js":"27","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\dashboard\\Education.js":"28","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\actions\\Post_action.js":"29","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\posts\\PostItem.js":"30","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\posts\\PostForm.js":"31","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\reducers\\index.js":"32","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\posts\\CommentForm.js":"33","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\posts\\CommentItem.js":"34","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile\\ProfileExperience.js":"35","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile\\ProfileTop.js":"36","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profiles\\ProfileItem.js":"37","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile\\ProfileEducation.js":"38","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile\\ProfileAbout.js":"39","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\reducers\\Alert.js":"40","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\reducers\\Post.js":"41","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\reducers\\Auth.js":"42","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\reducers\\Profile.js":"43"},{"size":513,"mtime":1697827813500,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1697827813554,"results":"46","hashOfConfig":"45"},{"size":2769,"mtime":1697827813443,"results":"47","hashOfConfig":"45"},{"size":382,"mtime":1697827813607,"results":"48","hashOfConfig":"45"},{"size":241,"mtime":1697827816465,"results":"49","hashOfConfig":"45"},{"size":2085,"mtime":1697827813745,"results":"50","hashOfConfig":"45"},{"size":2077,"mtime":1697827814018,"results":"51","hashOfConfig":"45"},{"size":659,"mtime":1697827815897,"results":"52","hashOfConfig":"45"},{"size":1954,"mtime":1697827814158,"results":"53","hashOfConfig":"45"},{"size":2896,"mtime":1697827814086,"results":"54","hashOfConfig":"45"},{"size":1119,"mtime":1697827814540,"results":"55","hashOfConfig":"45"},{"size":590,"mtime":1697827814484,"results":"56","hashOfConfig":"45"},{"size":6859,"mtime":1697827815271,"results":"57","hashOfConfig":"45"},{"size":3484,"mtime":1697827815202,"results":"58","hashOfConfig":"45"},{"size":1660,"mtime":1697827814604,"results":"59","hashOfConfig":"45"},{"size":3556,"mtime":1697827815137,"results":"60","hashOfConfig":"45"},{"size":8200,"mtime":1697827815335,"results":"61","hashOfConfig":"45"},{"size":995,"mtime":1697827815065,"results":"62","hashOfConfig":"45"},{"size":1291,"mtime":1697827815809,"results":"63","hashOfConfig":"45"},{"size":2724,"mtime":1697827815414,"results":"64","hashOfConfig":"45"},{"size":1211,"mtime":1697827814881,"results":"65","hashOfConfig":"45"},{"size":325,"mtime":1697827813682,"results":"66","hashOfConfig":"45"},{"size":1034,"mtime":1697827813934,"results":"67","hashOfConfig":"45"},{"size":6073,"mtime":1697827813874,"results":"68","hashOfConfig":"45"},{"size":643,"mtime":1697827814223,"results":"69","hashOfConfig":"45"},{"size":410,"mtime":1697827814661,"results":"70","hashOfConfig":"45"},{"size":1318,"mtime":1697827814420,"results":"71","hashOfConfig":"45"},{"size":1326,"mtime":1697827814291,"results":"72","hashOfConfig":"45"},{"size":3973,"mtime":1697827813803,"results":"73","hashOfConfig":"45"},{"size":2415,"mtime":1697827815008,"results":"74","hashOfConfig":"45"},{"size":965,"mtime":1697827814947,"results":"75","hashOfConfig":"45"},{"size":231,"mtime":1697827816386,"results":"76","hashOfConfig":"45"},{"size":1046,"mtime":1697827814732,"results":"77","hashOfConfig":"45"},{"size":1370,"mtime":1697827814796,"results":"78","hashOfConfig":"45"},{"size":728,"mtime":1697827815597,"results":"79","hashOfConfig":"45"},{"size":1762,"mtime":1697827815654,"results":"80","hashOfConfig":"45"},{"size":988,"mtime":1697827815734,"results":"81","hashOfConfig":"45"},{"size":809,"mtime":1697827815533,"results":"82","hashOfConfig":"45"},{"size":754,"mtime":1697827815476,"results":"83","hashOfConfig":"45"},{"size":374,"mtime":1697827816107,"results":"84","hashOfConfig":"45"},{"size":1690,"mtime":1697827816264,"results":"85","hashOfConfig":"45"},{"size":1128,"mtime":1697827816189,"results":"86","hashOfConfig":"45"},{"size":1053,"mtime":1697827816331,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17q4qsd",{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\index.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\App.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\store.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\utils\\setAuthToken.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\actions\\Auth_action.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\auth\\Login.js",["237","238"],[],"import axios from 'axios';\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/Auth_action';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n  const { email, password } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    login({ email, password });\n  };\n  //! Redirect if logged in\n  if (isAuthenticated) {\n    return navigate('/dashboard');\n  }\n  return (\n    <>\n      <section className='container'>\n        <h1 className='large text-primary'>Sign In</h1>\n        <p className='lead'>\n          <i className='fas fa-user'></i> Sign into Your Account\n        </p>\n        <form className='form' onSubmit={(e) => onSubmit(e)}>\n          <div className='form-group'>\n            <input\n              type='email'\n              placeholder='Email Address'\n              name='email'\n              value={email}\n              onChange={(e) => onChange(e)}\n              required\n            />\n          </div>\n          <div className='form-group'>\n            <input\n              type='password'\n              placeholder='Password'\n              name='password'\n              value={password}\n              onChange={(e) => onChange(e)}\n            />\n          </div>\n          <input type='submit' className='btn btn-primary' value='Login' />\n        </form>\n        <p className='my-1'>\n          Don't have an account? <Link to='/register'> Sign Up</Link>\n        </p>\n      </section>\n    </>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\nexport default connect(mapStateToProps, { login })(Login);\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\routing\\PrivateRoute.js",["239"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Navigate } from 'react-router-dom';\n\nconst PrivateRoute = ({\n  element: Element,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => {\n  console.log('Auth State:', isAuthenticated, loading);\n  if (isAuthenticated && !loading) {\n    return Element;\n  }\n\n  return <Navigate to='/login' replace={true} />; // Use Navigate to redirect to the login page\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\dashboard\\Dashboard.js",["240"],[],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { deleteAccount, getCurrentProfile } from '../../actions/Profile_action';\nimport { Link } from 'react-router-dom';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  deleteAccount,\n  profile: { profile, loading },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n    console.log('auth:', auth);\n    console.log('profile:', profile);\n  }, [getCurrentProfile]);\n  if (loading && profile === null) {\n    return <Spinner />;\n  }\n  return (\n    <>\n      <h1 className='large text-primary'>DashBoard</h1>\n      <p className='lead'>\n        <i className='fas fa-user'>Welcome {auth?.user && auth?.user.name}</i>\n      </p>\n      {profile !== null ? (\n        <>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n          <div className='my-2'>\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\n              <i className='fas fa-user-minus'>Delete My Account</i>\n            </button>\n          </div>\n        </>\n      ) : (\n        <>\n          <p>You have not yet set a profile, please add some infor</p>\n          <Link to='/create-profile' className='my-1 brn btn-primary'>\n            Create Profile\n          </Link>\n        </>\n      )}\n    </>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\nexport default connect(mapStateToProps, { deleteAccount, getCurrentProfile })(\n  Dashboard\n);\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\auth\\Register.js",["241","242"],[],"import React from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/Alert_action';\nimport { register } from '../../actions/Auth_action';\nimport PropTypes from 'prop-types';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      console.log('password does not match');\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name, email, password });\n    }\n  };\n  if (isAuthenticated) {\n    return navigate('/dashboard');\n  }\n  return (\n    <>\n      <h1 className='large text-primary'>Sign Up</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Create Your Account\n      </p>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='password2'\n            value={password2}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Register' />\n      </form>\n      <p className='my-1'>\n        Already have an account? <Link to='/login'>Sign In</Link>\n      </p>\n    </>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\layout\\Landing.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\layout\\Alert.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile-forms\\CreateProfile.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile-forms\\AddExperience.js",["243","244"],[],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { addExperience } from '../../actions/Profile_action';\nimport { Link } from 'react-router-dom';\nconst AddExperience = ({ addExperience, navigateCallback }) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: 'false',\n    description: '',\n  });\n  const [toDateDisabled, setToDateDisabled] = useState(false);\n  const { company, title, location, from, to, current, description } = formData;\n  const handleChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  return (\n    <>\n      <h1 className='large text-primary'>Add An Experience</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch'></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addExperience(formData, navigateCallback);\n        }}\n      >\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Job Title'\n            name='title'\n            value={title}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Company'\n            name='company'\n            value={company}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            value={location}\n            onChange={(e) => handleChange(e)}\n            name='location'\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={(e) => {\n                setFormData({ ...formData, current: !current });\n                setToDateDisabled(!toDateDisabled);\n              }}\n            />\n            Current Job\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={(e) => handleChange(e)}\n            disabled={!toDateDisabled ? 'disabled' : ''}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Job Description'\n            value={description}\n            onChange={(e) => handleChange(e)}\n          ></textarea>\n        </div>\n        <input type='submit' className='my-1 btn btn-primary' />\n        <Link to='/dashboard' className='my-1 btn btn-light'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\nexport default connect(null, { addExperience })(AddExperience);\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\layout\\Navbar.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile-forms\\AddEducation.js",["245","246"],[],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { addEducation } from '../../actions/Profile_action';\nimport { Link } from 'react-router-dom';\nconst AddEducation = ({ addEducation, navigateCallback }) => {\n  const [toDateDisabled, setToDateDisabled] = useState(false);\n  const [formData, setFormData] = useState({\n    school: '',\n    degree: '',\n    from: '',\n    to: '',\n    current: 'false',\n    description: '',\n    fieldofstudy: '',\n  });\n  const { school, degree, from, fieldofstudy, to, current, description } =\n    formData;\n  const handleChange = (e) =>\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addEducation(formData, navigateCallback);\n  };\n  return (\n    <>\n      <h1 className='large text-primary'>Add Your Education</h1>\n      <p className='lead'>\n        <i className='fas fa-graduation-cap'></i> Add any school, bootcamp, etc\n        that you have attended\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={(e) => handleSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* School or Bootcamp'\n            name='school'\n            value={school}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Degree or Certificate'\n            name='degree'\n            value={degree}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Field Of Study'\n            name='fieldofstudy'\n            value={fieldofstudy}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={(e) => {\n                setFormData({ ...formData, current: !current });\n                setToDateDisabled(!toDateDisabled);\n              }}\n            />\n            Current School or Bootcamp\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={(e) => handleChange(e)}\n            disabled={!toDateDisabled ? 'disabled' : ''}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Program Description'\n            value={description}\n            onChange={(e) => handleChange(e)}\n          ></textarea>\n        </div>\n        <input type='submit' className='my-1 btn btn-primary' />\n        <Link to={'/dashboard'} className='my-1 btn btn-light'>\n          Go Back\n        </Link>\n      </form>\n    </>\n  );\n};\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(AddEducation);\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile-forms\\EditProfile.js",["247"],[],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  CreateProfile as createProfilAction,\n  getCurrentProfile,\n} from '../../actions/Profile_action';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfilAction,\n  getCurrentProfile,\n  navigateCallback,\n}) => {\n  const navigate = useNavigate();\n  const [displaySocialInputs, setDisplaySocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n    setFormData({\n      company: loading || !profile?.company ? '' : profile?.company,\n      website: loading || !profile?.website ? '' : profile?.website,\n      location: loading || !profile?.location ? '' : profile?.location,\n      status: loading || !profile?.status ? '' : profile?.status,\n      skills: loading || !profile?.skills ? '' : profile?.skills,\n      githubusername:\n        loading || !profile?.githubusername ? '' : profile?.githubusername,\n      bio: loading || !profile?.bio ? '' : profile?.bio,\n      twitter:\n        loading || !profile?.social?.twitter ? '' : profile?.social?.twitter,\n      facebook:\n        loading || !profile?.social?.facebook ? '' : profile?.social?.facebook,\n      linkedin:\n        loading || !profile?.social?.linkedin ? '' : profile?.social?.linkedin,\n      youtube:\n        loading || !profile?.social?.youtube ? '' : profile?.social?.youtube,\n      instagram:\n        loading || !profile?.social?.instagram\n          ? ''\n          : profile?.social?.instagram,\n    });\n  }, [loading]);\n\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  });\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n  console.log(formData);\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createProfilAction(formData, navigate, true);\n  };\n  return (\n    <>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={(e) => handleSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            type='button'\n            className='btn btn-light'\n            onClick={(e) => setDisplaySocialInputs(!displaySocialInputs)}\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n        {displaySocialInputs && (\n          <>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>{' '}\n          </>\n        )}\n        <input type='submit' className='my-1 btn btn-primary' />\n        <Link to='/dashboard'>Go Back</Link>\n      </form>\n    </>\n  );\n};\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\nexport default connect(mapStateToProps, {\n  createProfilAction,\n  getCurrentProfile,\n})(EditProfile);\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\posts\\Posts.js",["248"],[],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../../actions/Post_action';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [posts]);\n  return loading ? (\n    <Spinner />\n  ) : (\n    <>\n      <h1 className='large text-primary'>Posts</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i>Welcome to the community\n      </p>\n      <PostForm />\n      <div className='posts'>\n        {posts.map((post) => (\n          <PostItem key={post._id} post={post} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\nexport default connect(mapStateToProps, { getPosts })(Posts);\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profiles\\Profiles.js",["249"],[],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getAllProfiles } from '../../actions/Profile_action';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem';\n\nconst Profiles = ({ getAllProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getAllProfiles();\n  }, []);\n  console.log('getallprofilespage');\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <h1 className='large text-primary'>Developers</h1>\n          <p className='lead'>\n            <i className='fab fa-connectdevlop'></i>Browse and connect with\n            developers\n          </p>\n          <div className='profiles'>\n            {profiles.length > 0 ? (\n              profiles.map((profile) => (\n                <ProfileItem key={profile._id} profile={profile} />\n              ))\n            ) : (\n              <h4>No Items FOund</h4>\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nProfiles.propTypes = {\n  getAllProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getAllProfiles })(Profiles);\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile\\Profile.js",["250","251"],[],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfileById } from '../../actions/Profile_action';\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\n\nconst Profile = ({\n  getProfileById,\n  auth,\n  profile: { profile, loading },\n  userId,\n}) => {\n  const { id } = useParams();\n  console.log(id);\n  useEffect(() => {\n    getProfileById(id);\n  }, [getProfileById]);\n  if (profile === null) {\n    return <h1>No Profiles Found</h1>;\n  }\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <Link to={'/profiles'} className='btn btn-light'>\n            Back To Profiles\n          </Link>\n          {auth?.isAuthenticated &&\n            auth?.loading === false &&\n            auth?.user?._id === profile?.user?._id && (\n              <Link to={'/edit-profile'} className='btn btn-dark'>\n                {' '}\n                Edit Profile\n              </Link>\n            )}\n          <div className='my-1 profile-grid'>\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className='p-2 bg-white profile-exp'>\n              <h2 className='text-primary'>Experience</h2>\n              {profile.experience.length > 0 ? (\n                <>\n                  {profile.experience.map((experience) => (\n                    <ProfileExperience\n                      key={experience?._id}\n                      experience={experience}\n                    />\n                  ))}\n                </>\n              ) : (\n                <h4>No Experience Credentials</h4>\n              )}\n            </div>\n            <div className='p-2 bg-white profile-edu'>\n              <h2 className='text-primary'>Education</h2>\n              {profile.education.length > 0 ? (\n                <>\n                  {profile.education.map((edu) => (\n                    <ProfileEducation key={edu?._id} education={edu} />\n                  ))}\n                </>\n              ) : (\n                <h4>No Education Credentials</h4>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\posts\\Post.js",["252"],[],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getSinglePost } from '../../actions/Post_action';\nimport { Link, useParams } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\n\nconst Post = ({ getSinglePost, post: { post, loading } }) => {\n  const { id } = useParams();\n  useEffect(() => {\n    getSinglePost(id);\n  }, [getSinglePost]);\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <>\n      <Link to='/posts' className='btn'>\n        Back To Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className='comments'>\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </>\n  );\n};\nPost.propTypes = {\n  getSinglePost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\nexport default connect(mapStateToProps, { getSinglePost })(Post);\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\actions\\Alert_action.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\actions\\Types.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\actions\\Profile_action.js",["253"],[],"import axios from 'axios';\nimport { setAlert } from './Alert_action';\n\nimport {\n  ACCOUNT_DELETED,\n  CLEAR_PROFILE,\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  GET_REPOS,\n} from './Types';\n//! Get current users profile\n\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.status,\n      },\n    });\n  }\n};\n\n//! create or update users profile\n\nexport const CreateProfile =\n  (formData, navigateCallback, editFlag = false) =>\n  async (dispatch) => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const res = await axios.post('/api/profile', formData, config);\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data,\n      });\n      dispatch(\n        setAlert(editFlag ? 'Profile Updated' : 'Profile Created', 'success')\n      );\n      if (!editFlag) {\n        navigateCallback('/dashboard');\n      }\n    } catch (error) {\n      const errors = error?.response?.data?.errors;\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error?.msg, 'danger')));\n      }\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: error?.response?.statusText,\n          status: error?.response?.status,\n        },\n      });\n    }\n  };\n//! Add Experience\nexport const addExperience =\n  (formData, navigateCallback) => async (dispatch) => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const res = await axios.put('/api/profile/experience', formData, config);\n      dispatch({\n        type: UPDATE_PROFILE,\n        payload: res.data,\n      });\n      dispatch(setAlert('Experience Added', 'success'));\n      navigateCallback('/dashboard');\n    } catch (error) {\n      const errors = error?.response?.data?.errors;\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error?.msg, 'danger')));\n      }\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: error?.response?.statusText,\n          status: error?.response?.status,\n        },\n      });\n    }\n  };\n\n//! Add Education\n\nexport const addEducation =\n  (formData, navigateCallback) => async (dispatch) => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const res = await axios.put('/api/profile/education', formData, config);\n      dispatch({\n        type: UPDATE_PROFILE,\n        payload: res.data,\n      });\n      dispatch(setAlert('Education Added', 'success'));\n      navigateCallback('/dashboard');\n    } catch (error) {\n      const errors = error?.response?.data?.errors;\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error?.msg, 'danger')));\n      }\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: error?.response?.statusText,\n          status: error?.response?.status,\n        },\n      });\n    }\n  };\n\n//! Delete Experience\n\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.status,\n      },\n    });\n  }\n};\n\n//! Delete Education\n\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.status,\n      },\n    });\n  }\n};\n\n//! Delete Account\n\nexport const deleteAccount = () => async (dispatch) => {\n  if (window.confirm('Are you sure? This can Not Be undone!')) {\n    try {\n      const res = await axios.delete('/api/profile/');\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n\n      dispatch(setAlert('Your Account has been permenantly Removed', 'danger'));\n    } catch (error) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: error?.response?.statusText,\n          status: error?.response?.status,\n        },\n      });\n    }\n  }\n};\n\n//! Get all profiles\nexport const getAllProfiles = () => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.status,\n      },\n    });\n  }\n};\n\n//! Get profile by id\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.status,\n      },\n    });\n  }\n};\n\n//! Get github repos\nexport const getGithubRepos = (username) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.status,\n      },\n    });\n  }\n};\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\dashboard\\DashboardActions.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\layout\\Spinner.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\dashboard\\Experience.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\dashboard\\Education.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\actions\\Post_action.js",["254","255"],[],"import axios from 'axios';\n\nimport {\n  ADD_COMMENT,\n  ADD_POST,\n  DELTE_POST,\n  GET_POSTS,\n  GET_SINGLE_POST,\n  POST_ERROR,\n  REMOVE_COMMENT,\n  UPDATE_LIKES,\n} from './Types';\nimport { setAlert } from './Alert_action';\n\n//!Get posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.statusCode,\n      },\n    });\n  }\n};\n\n//! Add Like\n\nexport const addLike = (postId) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { postId, likes: res.data },\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.statusCode,\n      },\n    });\n  }\n};\n\n//! Remove Like\n\nexport const removeLike = (postId) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { postId, likes: res.data },\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.statusCode,\n      },\n    });\n  }\n};\n\n//! Remove Post\n\nexport const deletePost = (postId) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/posts/${postId}`);\n    dispatch({\n      type: DELTE_POST,\n      payload: { postId },\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.statusCode,\n      },\n    });\n  }\n};\n\n//! add Post\n\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.post('/api/posts/', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.statusCode,\n      },\n    });\n  }\n};\n\n//! Get Single Post\n\nexport const getSinglePost = (postId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${postId}`);\n    dispatch({\n      type: GET_SINGLE_POST,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.statusCode,\n      },\n    });\n  }\n};\n\n//! add Comment\n\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.statusCode,\n      },\n    });\n  }\n};\n\n//! delete Comment\n\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n    });\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.statusCode,\n      },\n    });\n  }\n};\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\posts\\PostItem.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\posts\\PostForm.js",["256"],[],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/Post_action';\n\nconst PostForm = ({ addPost }) => {\n  const [text, setText] = useState('');\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3>Say Something...</h3>\n      </div>\n      <form\n        className='my-1 form'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addPost({ text });\n          setText('');\n        }}\n      >\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Create a post'\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          required\n        ></textarea>\n        <input type='submit' className='my-1 btn btn-dark' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nPostForm.propTypes = {};\n\nexport default connect(null, { addPost })(PostForm);\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\reducers\\index.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\posts\\CommentForm.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\posts\\CommentItem.js",[],[],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile\\ProfileExperience.js",["257","258"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ProfileExperience = ({ experience }) => {\n  const { company, title, location, current, to, from, description } =\n    experience;\n  return (\n    <div>\n      <h3 className='text-dark'>{company}</h3>\n      <p>\n        <Moment format='YYY/MM/DD'>{from}</Moment> -{' '}\n        {!to ? 'Now' : <Moment format='YYYY/MM/DD'></Moment>}\n      </p>\n      <p>\n        <strong>Position:</strong>\n        {title}\n      </p>\n      <p>\n        <strong>Description:</strong>\n        {description}\n      </p>\n    </div>\n  );\n};\n\nProfileExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n};\n\nexport default ProfileExperience;\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile\\ProfileTop.js",["259"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user: { name, avatar },\n  },\n}) => {\n  return (\n    <div className='p-2 profile-top bg-primary'>\n      <img className='my-1 round-img' src={avatar} alt='avatar' />\n      <h1 className='large'>{name}</h1>\n      <p className='lead'>\n        {status} {company && <span> at {company}</span>}\n      </p>\n      <p>{location && <span>{location}</span>}</p>\n      <div className='my-1 icons'>\n        {website && (\n          <a href={website} target='_blank' rel='noopener noreferrer'>\n            <i className='fas fa-globe fa-2x'></i>\n          </a>\n        )}\n        {social?.twitter && (\n          <a href={social?.twitter} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-twitter fa-2x'></i>\n          </a>\n        )}\n        {social?.facebook && (\n          <a href={social?.facebook} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-facebook fa-2x'></i>\n          </a>\n        )}\n        {social?.linkedin && (\n          <a href={social?.linkedin} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-linkedin fa-2x'></i>\n          </a>\n        )}\n        {social?.youtube && (\n          <a href={social?.youtube} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-youtube fa-2x'></i>\n          </a>\n        )}\n        {social?.instagram && (\n          <a href={social?.instagram} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-instagram fa-2x'></i>\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {};\n\nexport default ProfileTop;\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profiles\\ProfileItem.js",["260"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Profile from '../profile/Profile';\n\nconst ProfileItem = ({ profile }) => {\n  console.log('profileitem');\n  return (\n    <div className='profile bg-light'>\n      <img src={profile?.user?.avatar} alt='avatar' className='round-img' />\n      <div>\n        <h2>{profile?.user?.name}</h2>\n        <p>\n          {profile?.status}{' '}\n          {profile?.company && <span> at {profile?.location}</span>}\n        </p>\n        <Link to={`/profile/${profile?.user?._id}`} className='btn btn-primary'>\n          View Profile\n        </Link>\n      </div>\n      <ul>\n        {profile?.skills.slice(0, 4).map((skill, index) => (\n          <li key={index} className='text-primary'>\n            <i className='fas fa-check'>{skill}</i>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileItem;\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile\\ProfileEducation.js",["261"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ProfileEducation = ({ education }) => {\n  const { school, degree, fieldofstudy, current, to, from, description } =\n    education;\n  return (\n    <div>\n      <h3 className='text-dark'>{school}</h3>\n      <p>\n        <Moment format='YYY/MM/DD'>{from}</Moment> -{' '}\n        {!to ? 'Now' : <Moment format='YYYY/MM/DD'></Moment>}\n      </p>\n      <p>\n        <strong>Degree:</strong>\n        {degree}\n      </p>\n      <p>\n        <strong>Field of Study:</strong>\n        {fieldofstudy}\n      </p>\n      <p>\n        <strong>Description:</strong>\n        {description}\n      </p>\n    </div>\n  );\n};\n\nProfileEducation.propTypes = {\n  education: PropTypes.array.isRequired,\n};\n\nexport default ProfileEducation;\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\components\\profile\\ProfileAbout.js",["262"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name },\n  },\n}) => {\n  return (\n    <div className='p-2 profile-about bg-light'>\n      {bio && (\n        <>\n          <h2 className='text-primary'>{name.trim().split(' ')[0]}'s Bio</h2>\n          <p>{bio}</p>\n          <div className='line'></div>\n        </>\n      )}\n      <h2 className='text-primary'>Skill Set</h2>\n      <div className='skills'>\n        {skills.map((skill, index) => (\n          <div key={index} className='p-1'>\n            <i className='fas fa-check'></i>\n            {skill}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nProfileAbout.propTypes = {};\n\nexport default ProfileAbout;\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\reducers\\Alert.js",["263"],[],"import { SET_ALERT, REMOVE_ALERT } from '../actions/Types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\reducers\\Post.js",[],["264"],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\reducers\\Auth.js",[],["265"],"C:\\Users\\Aravindan\\Desktop\\DevConnecter-master\\client\\src\\reducers\\Profile.js",[],["266"],{"ruleId":"267","severity":1,"message":"268","line":1,"column":8,"nodeType":"269","messageId":"270","endLine":1,"endColumn":13},{"ruleId":"267","severity":1,"message":"271","line":4,"column":16,"nodeType":"269","messageId":"270","endLine":4,"endColumn":24},{"ruleId":"267","severity":1,"message":"272","line":4,"column":10,"nodeType":"269","messageId":"270","endLine":4,"endColumn":15},{"ruleId":"273","severity":1,"message":"274","line":21,"column":6,"nodeType":"275","endLine":21,"endColumn":25,"suggestions":"276"},{"ruleId":"267","severity":1,"message":"268","line":3,"column":8,"nodeType":"269","messageId":"270","endLine":3,"endColumn":13},{"ruleId":"267","severity":1,"message":"271","line":8,"column":16,"nodeType":"269","messageId":"270","endLine":8,"endColumn":24},{"ruleId":"267","severity":1,"message":"277","line":1,"column":17,"nodeType":"269","messageId":"270","endLine":1,"endColumn":26},{"ruleId":"267","severity":1,"message":"278","line":4,"column":8,"nodeType":"269","messageId":"270","endLine":4,"endColumn":15},{"ruleId":"267","severity":1,"message":"277","line":1,"column":17,"nodeType":"269","messageId":"270","endLine":1,"endColumn":26},{"ruleId":"267","severity":1,"message":"278","line":4,"column":8,"nodeType":"269","messageId":"270","endLine":4,"endColumn":15},{"ruleId":"273","severity":1,"message":"279","line":43,"column":6,"nodeType":"275","endLine":43,"endColumn":15,"suggestions":"280"},{"ruleId":"273","severity":1,"message":"281","line":12,"column":6,"nodeType":"275","endLine":12,"endColumn":13,"suggestions":"282"},{"ruleId":"273","severity":1,"message":"283","line":11,"column":6,"nodeType":"275","endLine":11,"endColumn":8,"suggestions":"284"},{"ruleId":"267","severity":1,"message":"285","line":5,"column":27,"nodeType":"269","messageId":"270","endLine":5,"endColumn":42},{"ruleId":"273","severity":1,"message":"286","line":22,"column":6,"nodeType":"275","endLine":22,"endColumn":22,"suggestions":"287"},{"ruleId":"273","severity":1,"message":"286","line":15,"column":6,"nodeType":"275","endLine":15,"endColumn":21,"suggestions":"288"},{"ruleId":"267","severity":1,"message":"289","line":179,"column":13,"nodeType":"269","messageId":"270","endLine":179,"endColumn":16},{"ruleId":"267","severity":1,"message":"289","line":78,"column":11,"nodeType":"269","messageId":"270","endLine":78,"endColumn":14},{"ruleId":"267","severity":1,"message":"289","line":175,"column":11,"nodeType":"269","messageId":"270","endLine":175,"endColumn":14},{"ruleId":"267","severity":1,"message":"290","line":2,"column":8,"nodeType":"269","messageId":"270","endLine":2,"endColumn":17},{"ruleId":"267","severity":1,"message":"291","line":6,"column":27,"nodeType":"269","messageId":"270","endLine":6,"endColumn":35},{"ruleId":"267","severity":1,"message":"292","line":6,"column":37,"nodeType":"269","messageId":"270","endLine":6,"endColumn":44},{"ruleId":"267","severity":1,"message":"290","line":2,"column":8,"nodeType":"269","messageId":"270","endLine":2,"endColumn":17},{"ruleId":"267","severity":1,"message":"293","line":4,"column":8,"nodeType":"269","messageId":"270","endLine":4,"endColumn":15},{"ruleId":"267","severity":1,"message":"292","line":6,"column":41,"nodeType":"269","messageId":"270","endLine":6,"endColumn":48},{"ruleId":"267","severity":1,"message":"290","line":2,"column":8,"nodeType":"269","messageId":"270","endLine":2,"endColumn":17},{"ruleId":"294","severity":1,"message":"295","line":5,"column":1,"nodeType":"296","endLine":15,"endColumn":2},{"ruleId":"294","severity":1,"message":"295","line":20,"column":1,"nodeType":"296","endLine":81,"endColumn":2,"suppressions":"297"},{"ruleId":"294","severity":1,"message":"295","line":19,"column":1,"nodeType":"296","endLine":53,"endColumn":2,"suppressions":"298"},{"ruleId":"294","severity":1,"message":"295","line":19,"column":1,"nodeType":"296","endLine":57,"endColumn":2,"suppressions":"299"},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Navigate' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth' and 'profile'. Either include them or remove the dependency array.","ArrayExpression",["300"],"'useEffect' is defined but never used.","'Spinner' is defined but never used.","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile?.bio', 'profile?.company', 'profile?.githubusername', 'profile?.location', 'profile?.skills', 'profile?.social?.facebook', 'profile?.social?.instagram', 'profile?.social?.linkedin', 'profile?.social?.twitter', 'profile?.social?.youtube', 'profile?.status', and 'profile?.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["301"],"React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array. If 'getPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["302"],"React Hook useEffect has a missing dependency: 'getAllProfiles'. Either include it or remove the dependency array. If 'getAllProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["303"],"'useSearchParams' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["304"],["305"],"'res' is assigned a value but never used.","'PropTypes' is defined but never used.","'location' is assigned a value but never used.","'current' is assigned a value but never used.","'Profile' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["306"],["307"],["308"],{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"kind":"321","justification":"322"},{"kind":"321","justification":"322"},{"kind":"321","justification":"322"},"Update the dependencies array to be: [auth, getCurrentProfile, profile]",{"range":"323","text":"324"},"Update the dependencies array to be: [getCurrentProfile, loading, profile?.bio, profile?.company, profile?.githubusername, profile?.location, profile?.skills, profile?.social?.facebook, profile?.social?.instagram, profile?.social?.linkedin, profile?.social?.twitter, profile?.social?.youtube, profile?.status, profile?.website]",{"range":"325","text":"326"},"Update the dependencies array to be: [getPosts, posts]",{"range":"327","text":"328"},"Update the dependencies array to be: [getAllProfiles]",{"range":"329","text":"330"},"Update the dependencies array to be: [getProfileById, id]",{"range":"331","text":"332"},"Update the dependencies array to be: [getSinglePost, id]",{"range":"333","text":"334"},"directive","",[636,655],"[auth, getCurrentProfile, profile]",[1595,1604],"[getCurrentProfile, loading, profile?.bio, profile?.company, profile?.githubusername, profile?.location, profile?.skills, profile?.social?.facebook, profile?.social?.instagram, profile?.social?.linkedin, profile?.social?.twitter, profile?.social?.youtube, profile?.status, profile?.website]",[384,391],"[getPosts, posts]",[385,387],"[getAllProfiles]",[671,687],"[getProfileById, id]",[528,543],"[getSinglePost, id]"]