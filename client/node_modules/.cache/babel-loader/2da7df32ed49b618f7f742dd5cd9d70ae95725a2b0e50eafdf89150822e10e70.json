{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aravindan\\\\Desktop\\\\DevConnecter-master\\\\client\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element: Element,\n  auth: {\n    isAuthenticated,\n    loading\n  },\n  ...rest\n}) => {\n  console.log('Auth State:', isAuthenticated, loading);\n  if (isAuthenticated && !loading) {\n    return Element;\n  }\n  return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this); // Use Navigate to redirect to the login page\n};\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","PropTypes","connect","Route","Navigate","jsxDEV","_jsxDEV","PrivateRoute","element","Element","auth","isAuthenticated","loading","rest","console","log","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","object","isRequired","mapStateToProps","state","$RefreshReg$"],"sources":["C:/Users/Aravindan/Desktop/DevConnecter-master/client/src/components/routing/PrivateRoute.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Route, Navigate } from 'react-router-dom';\n\nconst PrivateRoute = ({\n  element: Element,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => {\n  console.log('Auth State:', isAuthenticated, loading);\n  if (isAuthenticated && !loading) {\n    return Element;\n  }\n\n  return <Navigate to='/login' replace={true} />; // Use Navigate to redirect to the login page\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EACpBC,OAAO,EAAEC,OAAO;EAChBC,IAAI,EAAE;IAAEC,eAAe;IAAEC;EAAQ,CAAC;EAClC,GAAGC;AACL,CAAC,KAAK;EACJC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,eAAe,EAAEC,OAAO,CAAC;EACpD,IAAID,eAAe,IAAI,CAACC,OAAO,EAAE;IAC/B,OAAOH,OAAO;EAChB;EAEA,oBAAOH,OAAA,CAACF,QAAQ;IAACY,EAAE,EAAC,QAAQ;IAACC,OAAO,EAAE;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,CAAC;AAClD,CAAC;AAACC,EAAA,GAXIf,YAAY;AAalBA,YAAY,CAACgB,SAAS,GAAG;EACvBb,IAAI,EAAET,SAAS,CAACuB,MAAM,CAACC;AACzB,CAAC;AAED,MAAMC,eAAe,GAAIC,KAAK,KAAM;EAClCjB,IAAI,EAAEiB,KAAK,CAACjB;AACd,CAAC,CAAC;AAEF,eAAeR,OAAO,CAACwB,eAAe,CAAC,CAACnB,YAAY,CAAC;AAAC,IAAAe,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}